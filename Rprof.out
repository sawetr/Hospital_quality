sample.interval=20000
".Rd_get_text" ".Rd_get_title" "is.factor" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "impl" ".rs.rpc.get_help" 
"fsub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "impl" ".rs.rpc.get_help" 
"writeLines" "writeLinesUTF8" "of1" "of0" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "impl" ".rs.rpc.get_help" 
"?" 
"readRDS" "index.search" "help" "eval" "eval" "?" 
"writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
".Call" ".rs.isBrowserActive" ".rs.reticulate.replIsActive" 
".Call" ".rs.isBrowserActive" ".rs.reticulate.replIsActive" 
"unique" ".make_numeric_version" "package_version" ".rs.getPackageVersion" ".rs.isPackageVersionInstalled" 
"lazyLoadDBfetch" "normalize_path" "xfun::same_path" "knit" "knitr:::purl" ".Call" "op" "...elt" "withVisible" "capture.output" ".rs.rpc.save_active_document" 
"ls" "%in%" "is_utf8" "which" "invalid_utf8" "xfun::read_utf8" "knit" "knitr:::purl" ".Call" "op" "...elt" "withVisible" "capture.output" ".rs.rpc.save_active_document" 
"structure" "setNames" "resolve" "setNames" "get" "set2" "knit_code$set" "parse_block" "FUN" "lapply" "split_file" "process_file" "knit" "knitr:::purl" ".Call" "op" "...elt" "withVisible" "capture.output" ".rs.rpc.save_active_document" 
"cmp" "cmpIndices" "cmpSubassignDispatch" "h" "trySetterInline" "cmpSetterCall" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
".Call" ".rs.enqueClientEvent" "<Anonymous>" 
"is.factor" "grepl" ".rs.extractRCode" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
